name: "Bindgen"
permissions:
  contents: read

on:
  workflow_call:
  workflow_dispatch:

jobs:

  bindgen-ffi-job:
    name: "Bindgen FFI"
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - { name: Windows, os: windows-latest, rid: win }
          - { name: macOS, os: macos-latest, rid: osx }
          - { name: Linux, os: ubuntu-latest, rid: linux }

    steps:
      - name: "Clone Git repository"
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: "Setup .NET"
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'

      - name: "Install c2ffi"
        shell: bash
        run: dotnet tool install -g bottlenoselabs.c2ffi.Tool

      - name: "Get c2ffi version"
        id: get-version-c2ffi
        shell: bash
        run: |
          VERSION="$(c2ffi --version)"
          echo "VERSION=$VERSION"
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

      - name: "Cache bindgen extract FFI"
        id: cache-ffi
        uses: actions/cache@v4
        with:
          path: "./bindgen/ffi"
          key: "ffi-${{ matrix.platform.rid }}-${{ hashFiles('bindgen/config-extract.json') }}-${{ hashFiles('ext/SDL/**/*') }}-${{ steps.get-version-c2ffi.outputs.VERSION }}"

      - name: "Read C code: Linux dependencies"
        if: runner.os == 'Linux' && steps.cache-ffi.outputs.cache-hit != 'true'
        run: sudo apt-get install gcc-aarch64-linux-gnu

      - name: "Read C code: extract FFI ${{ matrix.platform.name }}"
        shell: bash
        if: steps.cache-ffi.outputs.cache-hit != 'true'
        run: cd ./bindgen && ./bindgen-01-extract.sh

      - name: "Upload FFIs"
        uses: actions/upload-artifact@v4
        with:
          name: "ffi-${{ matrix.platform.rid }}"
          path: "./bindgen/ffi"

  bindgen-cross-platform-ffi-job:
    name: "Bindgen FFI cross-platform"
    needs: [bindgen-ffi-job]
    runs-on: ubuntu-latest

    steps:
      - name: "Clone Git repository"
        uses: actions/checkout@v4
        with:
          submodules: 'false'

      - name: "Setup .NET"
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'

      - name: "Download FFI (win)"
        uses: actions/download-artifact@v4
        with:
          name: "ffi-win"
          path: "./bindgen/ffi"

      - name: "Download FFI (osx)"
        uses: actions/download-artifact@v4
        with:
          name: "ffi-osx"
          path: "./bindgen/ffi"

      - name: "Download FFI (linux)"
        uses: actions/download-artifact@v4
        with:
          name: "ffi-linux"
          path: "./bindgen/ffi"

      - name: "Install c2ffi"
        shell: bash
        run: dotnet tool install -g bottlenoselabs.c2ffi.Tool

      - name: "Generate cross-platform FFI"
        shell: bash
        run: cd ./bindgen && ./bindgen-02-merge.sh

      - name: "Upload cross-platform FFI"
        uses: actions/upload-artifact@v4
        with:
          name: "ffi-x"
          path: "./bindgen/ffi-x/cross-platform.json"

  bindgen-cs-job:
    name: "Bindgen C#"
    needs: [bindgen-cross-platform-ffi-job]
    runs-on: ubuntu-latest

    steps:
      - name: "Clone Git repository"
        uses: actions/checkout@v4
        with:
          submodules: 'false'

      - name: "Setup .NET"
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'

      - name: "Download C code cross-platform FFI"
        uses: actions/download-artifact@v4
        with:
          name: "ffi-x"
          path: "./bindgen/ffi-x"

      - name: "Install c2cs"
        shell: bash
        run: dotnet tool install -g bottlenoselabs.c2cs.Tool

      - name: "Generate C# code"
        shell: bash
        run: cd ./bindgen && ./bindgen-03-generate.sh

      - name: "Upload generated C# code"
        uses: actions/upload-artifact@v4
        with:
          name: "generated-cs"
          path: "./src/cs/production/Interop.SDL/Generated"

  bindgen-build-dotnet-job:
    name: "Build"
    needs: [bindgen-cs-job]
    uses: "./.github/workflows/build.yml"
