name: "Bindgen"
permissions:
  contents: read

on:
  workflow_call:
  workflow_dispatch:

jobs:

  bindgen-ffi-job:
    name: "Bindgen FFI"
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - { name: Windows, os: windows-latest, rid: win }
          - { name: macOS, os: macos-latest, rid: osx }
          - { name: Linux, os: ubuntu-latest, rid: linux }

    steps:
      - name: "Clone Git repository"
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: "Get c2ffi version"
        id: get-version-c2ffi
        shell: bash
        run: |
          VERSION="$(.github/scripts/get-nuget-package-latest-version.sh bottlenoselabs.c2ffi.Tool)"
          echo "VERSION=$VERSION"
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

      - name: "Cache bindgen extract FFI"
        id: cache-ffi
        uses: actions/cache@v4
        with:
          path: "./bindgen/ffi"
          key: "ffi-${{ matrix.platform.rid }}_${{ hashFiles('bindgen/**/*') }}_${{ hashFiles('ext/SDL/**/*') }}__${{ hashFiles('ext/SDL_image/**/*') }}_${{ steps.get-version-c2ffi.outputs.VERSION }}"

      - name: "Install Linux dependencies"
        if: matrix.platform.rid == 'linux' # && steps.cache-ffi.outputs.cache-hit != 'true'
        run: sudo apt-get install gcc-aarch64-linux-gnu

      - name: "Setup .NET"
        uses: actions/setup-dotnet@v3
        # if: steps.cache-ffi.outputs.cache-hit != 'true'
        with:
          dotnet-version: '9.x'

      - name: "Install c2ffi"
        # if: steps.cache-ffi.outputs.cache-hit != 'true'
        shell: bash
        run: dotnet tool install -g bottlenoselabs.c2ffi.tool

      - name: "Extract FFI ${{ matrix.platform.name }}: SDL"
        shell: bash
        # if: steps.cache-ffi.outputs.cache-hit != 'true'
        run: cd ./bindgen/SDL && ./bindgen-01-extract.sh

      - name: "Upload FFIs: SDL"
        uses: actions/upload-artifact@v4
        with:
          name: "ffi-${{ matrix.platform.rid }}-SDL"
          path: "./bindgen/SDL/ffi"
          if-no-files-found: error

      - name: "Extract FFI ${{ matrix.platform.name }}: SDL_image"
        shell: bash
        # if: steps.cache-ffi.outputs.cache-hit != 'true'
        run: cd ./bindgen/SDL_image && ./bindgen-01-extract.sh

      - name: "Upload FFIs: SDL_image"
        uses: actions/upload-artifact@v4
        with:
          name: "ffi-${{ matrix.platform.rid }}-SDL_image"
          path: "./bindgen/SDL_image/ffi"
          if-no-files-found: error

  bindgen-cross-platform-ffi-job:
    name: "Bindgen FFI cross-platform"
    needs: [bindgen-ffi-job]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project:
          - { name: SDL }
          - { name: SDL_image }

    steps:
      - name: "Clone Git repository"
        uses: actions/checkout@v4
        with:
          submodules: 'false'

      - name: "Setup .NET"
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'

      - name: "Install c2ffi"
        shell: bash
        run: dotnet tool install -g bottlenoselabs.c2ffi.tool

      - name: "Download FFI (win): ${{ matrix.project.name }}"
        uses: actions/download-artifact@v4
        with:
          name: "ffi-win-${{ matrix.project.name }}"
          path: "./bindgen/${{ matrix.project.name }}/ffi"

      - name: "Download FFI (osx): ${{ matrix.project.name }}"
        uses: actions/download-artifact@v4
        with:
          name: "ffi-osx-${{ matrix.project.name }}"
          path: "./bindgen/${{ matrix.project.name }}/ffi"

      - name: "Download FFI (linux): ${{ matrix.project.name }}"
        uses: actions/download-artifact@v4
        with:
          name: "ffi-linux-${{ matrix.project.name }}"
          path: "./bindgen/${{ matrix.project.name }}/ffi"

      - name: "Generate cross-platform FFI: ${{ matrix.project.name }}"
        shell: bash
        run: cd ./bindgen/${{ matrix.project.name }} && ./bindgen-02-merge.sh

      - name: "Upload cross-platform FFI: ${{ matrix.project.name }}"
        uses: actions/upload-artifact@v4
        with:
          name: "ffi-x-${{ matrix.project.name }}"
          path: "./bindgen/${{ matrix.project.name }}/ffi-x/cross-platform.json"
          if-no-files-found: error

  bindgen-cs-job:
    name: "Bindgen C#"
    needs: [bindgen-cross-platform-ffi-job]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project:
          - { name: SDL }
          - { name: SDL_image }

    steps:
      - name: "Clone Git repository"
        uses: actions/checkout@v4
        with:
          submodules: 'false'

      - name: "Setup .NET"
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'

      - name: "Install c2cs"
        shell: bash
        run: dotnet tool install -g bottlenoselabs.c2cs.Tool

      - name: "Download C code cross-platform FFI: ${{ matrix.project.name }}"
        uses: actions/download-artifact@v4
        with:
          name: "ffi-x-${{ matrix.project.name }}"
          path: "./bindgen/${{ matrix.project.name }}/ffi-x"

      - name: "Generate C# code: ${{ matrix.project.name }}"
        shell: bash
        run: cd ./bindgen/${{ matrix.project.name }} && ./bindgen-03-generate.sh

      - name: "Upload generated C# code: ${{ matrix.project.name }}"
        uses: actions/upload-artifact@v4
        with:
          name: "generated-cs-${{ matrix.project.name }}"
          path: "./src/cs/production/Interop.${{ matrix.project.name }}/Generated"
          if-no-files-found: error

  bindgen-build-dotnet-job:
    name: "Build"
    needs: [bindgen-cs-job]
    uses: "./.github/workflows/build.yml"
